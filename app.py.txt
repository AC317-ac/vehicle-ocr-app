import streamlit as st
import pandas as pd
import io
import re
import base64
from google.cloud import vision
from google.oauth2 import service_account

# Set page
st.set_page_config(page_title="HK Vehicle OCR", layout="centered")
st.title("📄 香港車輛登記文件 ➜ Excel (Google OCR)")

# Upload Google service account key (for Streamlit Cloud)
gcp_key_file = st.file_uploader("📎 上傳 GCP 金鑰 JSON 檔 (service account)", type="json")
uploaded_file = st.file_uploader("📥 上傳車輛登記 JPG / PNG / PDF", type=["jpg", "jpeg", "png", "pdf"])

# Field extraction rules
def parse_vehicle_data(text):
    fields = {
        'Registration Mark': r'Registration Mark\s+([A-Z]+\d+)',
        'Make': r'Make\s+([A-Z ]+)',
        'Model': r'Model\s+([A-Z0-9 \(\)\-]+)',
        'Chassis No': r'Chassis No\.?\s+([A-Z0-9]+)',
        'Engine No': r'Engine No\.?\s+([A-Z0-9]+)',
        'Year of Manufacture': r'Year of Manufacture\s+(\d{4})',
        'Owner': r'Full Name of Registered Owner\s+([A-Z ]+)',
    }
    data = {}
    for key, pattern in fields.items():
        match = re.search(pattern, text)
        data[key] = match.group(1).strip() if match else ''
    return data

# Convert to Excel
def export_to_excel(data):
    df = pd.DataFrame([data])
    output = io.BytesIO()
    with pd.ExcelWriter(output, engine='openpyxl') as writer:
        df.to_excel(writer, index=False)
    return output.getvalue()

# OCR with Google Vision
def run_ocr(image_bytes, credentials):
    client = vision.ImageAnnotatorClient(credentials=credentials)
    image = vision.Image(content=image_bytes)
    response = client.document_text_detection(image=image)
    if response.error.message:
        st.error(f"OCR error: {response.error.message}")
        return ""
    return response.full_text_annotation.text

# Main logic
if gcp_key_file and uploaded_file:
    with st.spinner("🔍 正在上傳並處理 OCR..."):
        credentials = service_account.Credentials.from_service_account_info(
            gcp_key_file.read() if isinstance(gcp_key_file, io.BytesIO) else gcp_key_file
        )
        image_bytes = uploaded_file.read()
        text = run_ocr(image_bytes, credentials)
        st.text_area("📝 OCR 擷取文字", text, height=300)
        parsed = parse_vehicle_data(text)
        st.subheader("📋 擷取欄位")
        st.json(parsed)
        excel_bytes = export_to_excel(parsed)
        st.download_button("📥 下載 Excel", data=excel_bytes, file_name="vehicle_data.xlsx")
